[
  {
    "class" : "QueryByCommittee",
    "package" : "pool",
    "method" : "Query-by-Committee (QBC) with Kullback-Leibler Divergence",
    "category" :  "Informativeness",
    "template" : "examples/template_pool.py",
    "tags" : ["pool",  "classification", "single-annotator"],
    "title" : "Query-by-Committee (QBC) with Kullback-Leibler Divergence",
    "refs" : ["seung1992query","mccallum1998employing"],
    "sequence" : ["title", "text_0", "plot", "refs"],
    "text_0" : "",
    "import_misc" : ["from sklearn.ensemble import BaggingClassifier",
                     "from skactiveml.pool import QueryByCommittee"],
    "import_clf" : "from skactiveml.classifier import ParzenWindowClassifier",
    "init_clf" : "ParzenWindowClassifier(classes=np.unique(y_true), class_prior=0.1)",
    "init_qs" : "QueryByCommittee(method='KL_divergence', sample_predictions_method_name='sample_proba', sample_predictions_dict={'n_samples': 100})",
    "query_params" : "X=X, y=y, ensemble=clf"
  },
  {
    "class" : "QueryByCommittee",
    "package" : "pool",
    "method" : "Query-by-Committee (QBC) with Vote Entropy",
    "category" : "Informativeness",
    "template" : "examples/template_pool.py",
    "tags" : ["pool",  "classification", "single-annotator"],
    "title" : "Query-by-Committee (QBC) with Vote Entropy",
    "refs" : ["seung1992query","engelson1996minimizing"],
    "sequence" : ["title", "text_0", "plot", "refs"],
    "text_0" : "",
    "import_misc" : ["from skactiveml.pool import QueryByCommittee"],
    "import_clf" : "from skactiveml.classifier import ParzenWindowClassifier",
    "init_clf" : "ParzenWindowClassifier(classes=np.unique(y_true), class_prior=0.1)",
    "init_qs" : "QueryByCommittee(method='vote_entropy', sample_predictions_method_name='sample_proba', sample_predictions_dict={'n_samples': 100})",
    "query_params" : "X=X, y=y, ensemble=clf"
  },
  {
    "class" : "QueryByCommittee",
    "package" : "pool",
    "method" : "Query-by-Committee (QBC) with Variation Ratios",
    "category" : "Informativeness",
    "template" : "examples/template_pool.py",
    "tags" : ["pool",  "classification", "single-annotator"],
    "title" : "Query-by-Committee (QBC) with Variation Ratios",
    "refs" : ["seung1992query","beluch2018power"],
    "sequence" : ["title", "text_0", "plot", "refs"],
    "text_0" : "",
    "import_misc" : ["from skactiveml.pool import QueryByCommittee"],
    "import_clf" : "from skactiveml.classifier import ParzenWindowClassifier",
    "init_clf" : "ParzenWindowClassifier(classes=np.unique(y_true), class_prior=0.1)",
    "init_qs" : "QueryByCommittee(method='variation_ratios', sample_predictions_method_name='sample_proba', sample_predictions_dict={'n_samples': 100})",
    "query_params" : "X=X, y=y, ensemble=clf"
  },
  {
    "class" : "QueryByCommittee",
    "package" : "pool",
    "method" : "Query-by-Committee (QBC) with Empirical Variance",
    "category" : "Informativeness",
    "template" : "examples/template_pool_regression.py",
    "tags" : ["pool",  "regression", "single-annotator"],
    "title" : "Query-by-Committee (QBC) with Empirical Variance",
    "refs" : ["seung1992query","burbidge2007active"],
    "sequence" : ["title", "text_0", "plot", "refs"],
    "text_0" : "",
    "import_misc" : [
      "from skactiveml.pool import QueryByCommittee",
      "from skactiveml.regressor import SklearnRegressor"
    ],
    "import_reg" : "from sklearn.gaussian_process import GaussianProcessRegressor",
    "init_reg" : "SklearnRegressor(GaussianProcessRegressor())",
    "init_qs" : "QueryByCommittee(sample_predictions_method_name='sample_y', sample_predictions_dict={'n_samples': 100})",
    "query_params" : "X=X, y=y, ensemble=reg"
  }
]
