[
  {
    "class" : "ValueOfInformationEER",
    "package" : "pool",
    "method" : "Value of Information on Unlabeled Samples",
    "category" : "Informativeness",
    "template" : "examples/template_pool.py",
    "tags" : ["pool",  "classification", "single-annotator"],
    "title" : "Value of Information on Unlabeled Samples",
    "refs" : ["joshi2009multi"],
    "sequence" : ["title", "text_0", "plot", "refs"],
    "text_0" : "",
    "import_misc" : "from skactiveml.pool import ValueOfInformationEER",
    "init_qs" : ["ValueOfInformationEER(consider_unlabeled=True,",
                 "                      consider_labeled=False,",
                 "                      candidate_to_labeled=True,",
                 "                      subtract_current=True,",
                 "                      normalize=True)"],
    "query_params" : "X=X, y=y, clf=clf, ignore_partial_fit=True"
  },
  {
    "class" : "ValueOfInformationEER",
    "package" : "pool",
    "method" : "Value of Information on Labeled Samples",
    "category" : "Informativeness",
    "template" : "examples/template_pool.py",
    "tags" : ["pool",  "classification", "single-annotator"],
    "title" : "Value of Information on Labeled Samples",
    "refs" : ["margineantu2005active"],
    "sequence" : ["title", "text_0", "plot", "refs"],
    "text_0" : "",
    "import_misc" : "from skactiveml.pool import ValueOfInformationEER",
    "init_qs" : ["ValueOfInformationEER(consider_unlabeled=False,",
                 "                      consider_labeled=True,",
                 "                      candidate_to_labeled=False,",
                 "                      subtract_current=False)"],
    "query_params" : "X=X, y=y, clf=clf, ignore_partial_fit=True"
  },
  {
    "class" : "ValueOfInformationEER",
    "package" : "pool",
    "method" : "Value of Information (VOI)",
    "category" : "Informativeness",
    "template" : "examples/template_pool.py",
    "tags" : ["pool",  "classification", "single-annotator"],
    "title" : "Value of Information",
    "refs" : ["kapoor2007selective"],
    "sequence" : ["title", "text_0", "plot", "refs"],
    "text_0" : "",
    "import_misc" : "from skactiveml.pool import ValueOfInformationEER",
    "init_qs" : ["ValueOfInformationEER(consider_unlabeled=True,",
                 "                      consider_labeled=True,",
                 "                      candidate_to_labeled=True,",
                 "                      subtract_current=True)"],
    "query_params" : "X=X, y=y, clf=clf, ignore_partial_fit=True"
  },
  {
    "class" : "MonteCarloEER",
    "package" : "pool",
    "method" : "Monte-Carlo EER with Log-Loss",
    "category" : "Informativeness",
    "template" : "examples/template_pool.py",
    "tags" : ["pool",  "classification", "single-annotator"],
    "title" : "Monte-Carlo EER with Log-Loss",
    "refs" : ["roy2001toward"],
    "sequence" : ["title", "text_0", "plot", "refs"],
    "text_0" : "",
    "import_misc" : "from skactiveml.pool import MonteCarloEER",
    "init_qs" : "MonteCarloEER(method='log_loss')",
    "query_params" : "X=X, y=y, clf=clf, ignore_partial_fit=True"
  },
  {
    "class" : "MonteCarloEER",
    "package" : "pool",
    "method" : "Monte-Carlo EER with Misclassification-Loss",
    "category" : "Informativeness",
    "template" : "examples/template_pool.py",
    "tags" : ["pool",  "classification", "single-annotator"],
    "title" : "Monte-Carlo EER with Misclassification-Loss",
    "refs" : ["roy2001toward"],
    "sequence" : ["title", "text_0", "plot", "refs"],
    "text_0" : "",
    "import_misc" : "from skactiveml.pool import MonteCarloEER",
    "init_qs" : "MonteCarloEER(method='misclassification_loss')",
    "query_params" : "X=X, y=y, clf=clf, ignore_partial_fit=True"
  }
]
